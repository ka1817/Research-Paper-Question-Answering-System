name: Deploy to EC2

on:
  push:
    branches:
      - main  

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Set Environment Variables
        run: echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV

      - name: Run Backend Tests
        run: |
          if [ -z "${{ secrets.GROQ_API_KEY }}" ]; then
            echo "‚ùå GROQ_API_KEY is missing! Skipping tests..."
            exit 1
          fi
          PYTHONPATH=$(pwd) pytest tests/ --maxfail=5 --disable-warnings

      - name: Run FastAPI Server Test
        run: |
          uvicorn main:app --host 0.0.0.0 --port 3000 &  # Start FastAPI in the background
          for i in {1..10}; do
            if curl -f http://localhost:3000/docs; then
              echo "‚úÖ FastAPI is up!"
              exit 0
            fi
            echo "‚è≥ Waiting for FastAPI to start... ($i/10)"
            sleep 3
          done
          echo "‚ùå FastAPI did not start in time!"
          exit 1

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/research-backend:latest -f backend.Dockerfile .
          docker images | grep research-backend

      - name: Push Backend Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/research-backend:latest

      - name: Build Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest -f frontend.Dockerfile .
          docker images | grep research-frontend

      - name: Push Frontend Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest

  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üöÄ Pulling latest Docker images..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/research-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest

            echo "üõë Stopping and removing old containers..."
            docker stop backend frontend || true
            docker rm backend frontend || true

            echo "üîÑ Starting new backend container..."
            docker run -d --name backend -p 3000:3000 \
              -e GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
              ${{ secrets.DOCKER_USERNAME }}/research-backend:latest

            echo "üîÑ Starting new frontend container..."
            docker run -d --name frontend -p 8500:8500 \
              --link backend \
              ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest

            echo "‚úÖ Deployment complete!"
