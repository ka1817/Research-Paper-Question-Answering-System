name: Deploy to EC2

on:
  push:
    branches:
      - main  
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: |
          pytest tests/ --maxfail=5 --disable-warnings

      - name: Run FastAPI Server Test
        run: |
          uvicorn main:app --host 0.0.0.0 --port 3000 &  # Start server in background
          sleep 5  # Wait for server to start
          curl -f http://localhost:3000/docs || exit 1  # Check FastAPI is running

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/research-backend:latest -f backend.Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/research-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest -f frontend.Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest

  deploy:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/research-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest

            docker stop backend || true
            docker rm backend || true
            docker stop frontend || true
            docker rm frontend || true

            docker run -d --name backend -p 3000:3000 \
              -e GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
              ${{ secrets.DOCKER_USERNAME }}/research-backend:latest

            docker run -d --name frontend -p 8500:8500 \
              --link backend \
              ${{ secrets.DOCKER_USERNAME }}/research-frontend:latest
